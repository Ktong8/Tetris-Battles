[{"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/index.tsx":"1","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx":"2","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/Game.tsx":"3","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/Cell.tsx":"4","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/GameBoard.tsx":"5"},{"size":196,"mtime":1624214481054,"results":"6","hashOfConfig":"7"},{"size":837,"mtime":1624225506517,"results":"8","hashOfConfig":"7"},{"size":2257,"mtime":1624226093368,"results":"9","hashOfConfig":"7"},{"size":1462,"mtime":1624219538926,"results":"10","hashOfConfig":"7"},{"size":834,"mtime":1624226089361,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13tm925",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/index.tsx",[],["25","26"],"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx",["27"],"import React from 'react';\nimport bodyParser from 'body-parser';\nimport Game from './Game';\n\ninterface AppProp {\n\n}\n\ninterface AppState {\n  renderedComponent: string;\n}\n\nclass App extends React.Component<AppProp, AppState> {\n  \n  constructor(props: AppProp) {\n    super(props);\n    this.state = {\n      renderedComponent: \"\",\n    };\n  }\n\n  getResponse = async () => {\n    const resp = await fetch('/api/hello');\n    const reply = await resp.json();\n    if(resp.status !== 200) throw Error(reply.message);\n\n    return reply\n  }\n\n  componentDidMount() {\n    this.getResponse().then((res) => {\n      const someData = res;\n      this.setState({\n        renderedComponent: someData.express,\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div className = \"App-container\">\n        <Game/>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/Game.tsx",["28","29"],"import React from 'react';\nimport Cell from './Cell';\nimport GameBoard from './GameBoard';\n\nimport './Game.css';\n\nconst width = 10;\nconst height = 20;\n\nexport interface Piece {\n    width: number;\n    height: number;\n    grid: Array<Array<number>>;\n}\n\nconst pieces: Array<Piece> = [\n    {\n        width: 2,\n        height: 2,\n        grid: [[1,1],[1,1]],\n    },\n    {\n        width: 3,\n        height: 2,\n        grid: [[0,1,0], [1,1,1]],\n    },\n    {\n        width: 3,\n        height: 2,\n        grid: [[1,0,0],[1,1,1]],\n    },\n    {\n        width: 3,\n        height: 2,\n        grid: [[0,0,1],[1,1,1]],\n    },\n    {\n        width: 3,\n        height: 2,\n        grid: [[0,1,1],[1,1,0]],\n    },\n    {\n        width: 3,\n        height: 2,\n        grid: [[1,1,0], [0,1,1]],\n    },\n    {\n        width: 4,\n        height: 1,\n        grid: [[1,1,1,1]],\n    },\n]\n\ninterface GameProps {\n\n}\n\ninterface GameState {\n    board: Array<Array<number>>;\n    queue: Array<Piece>;\n}\n\n/**\n * A Mutable Game React Component representing an interactable 10x20 Tetris game. \n */\nclass Game extends React.Component<GameProps, GameState> {\n    constructor(props: GameProps) {\n        super(props);\n        const board: Array<Array<number>> = new Array(height);\n        for(let i = 0; i < height; i++){\n            board[i] = new Array(width).fill(0);\n        }\n        board[19][0] = 6;\n        board[19][1] = 7;\n        board[19][2] = 7;\n        board[19][3] = 7;\n        board[19][4] = 7;\n        board[19][5] = 5;\n        board[19][6] = 2;\n        board[19][7] = 2;\n        board[19][8] = 2;\n        board[18] = [8,6, 4,4,5,2,6,6,1,1];\n        board[17] = [8,7,4,4,2,2,2,6,1,1];\n        board[16] = [8,7,4,4,3,6,5,5,1,1];\n        board[15] = [8,7,3,3,3,6,6,5,5,3];\n        board[14] = [0,7,1,1,5,5,6,3,3,3];\n        board[13] = [0,2,1,1,4,5,5,3,3,3];\n        board[12] = [0,2,2,0,4,4,4,3,6,6];\n        board[11] = [7,2,0,0,4,4,4,6,6,3];\n        board[10] = [7,0,0,0,1,1,4,3,3,3];\n        board[9] = [7,0,0,0,1,1,0,0,0,0];\n        board[8] = [7,0,0,0,0,0,0,0,0,0];\n        this.state = {\n            board: board,\n            queue: [],\n        };\n    }\n\n    render() {\n        return (\n            <GameBoard board = {this.state.board}/>\n        )\n    }\n}\n\nexport default Game;","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/Cell.tsx",[],"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/GameBoard.tsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":18},{"ruleId":"34","severity":1,"message":"38","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":12},{"ruleId":"34","severity":1,"message":"39","line":16,"column":7,"nodeType":"36","messageId":"37","endLine":16,"endColumn":27},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"@typescript-eslint/no-unused-vars","'bodyParser' is defined but never used.","Identifier","unusedVar","'Cell' is defined but never used.","'pieces' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]