[{"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/index.tsx":"1","/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx":"2"},{"size":196,"mtime":1624147716705,"results":"3","hashOfConfig":"4"},{"size":822,"mtime":1624147714626,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13tm925",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/index.tsx",[],"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx",["11"],"import React from 'react';\nimport bodyParser from 'body-parser';\n\ninterface AppProp {\n\n}\n\ninterface AppState {\n  renderedComponent: string;\n}\n\nclass App extends React.Component<AppProp, AppState> {\n  \n  constructor(props: AppProp) {\n    super(props);\n    this.state = {\n      renderedComponent: \"\",\n    };\n  }\n\n  getResponse = async () => {\n    const resp = await fetch('/api/hello');\n    const reply = await resp.json();\n    if(resp.status !== 200) throw Error(reply.message);\n\n    return reply\n  }\n\n  componentDidMount() {\n    this.getResponse().then((res) => {\n      const someData = res;\n      this.setState({\n        renderedComponent: someData.express,\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Response: {this.state.renderedComponent}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":2,"column":8,"nodeType":"14","messageId":"15","endLine":2,"endColumn":18},"@typescript-eslint/no-unused-vars","'bodyParser' is defined but never used.","Identifier","unusedVar"]