{"ast":null,"code":"var _jsxFileName = \"/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getResponse = async () => {\n      const resp = await fetch('/api/hello');\n      const reply = await resp.json();\n      if (resp.status !== 200) throw Error(reply.message);\n      return reply;\n    };\n\n    this.state = {\n      renderedComponent: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      const someData = res;\n      this.setState({\n        renderedComponent: someData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.renderedComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevintong/Desktop/Web Development/react/tetris/client/src/App.tsx"],"names":["React","App","Component","constructor","props","getResponse","resp","fetch","reply","json","status","Error","message","state","renderedComponent","componentDidMount","then","res","someData","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAWA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAqD;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAiB;AAC1B,UAAMA,KAAN;;AAD0B,SAO5BC,WAP4B,GAOd,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAxB;AACA,YAAMC,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;AACA,UAAGH,IAAI,CAACI,MAAL,KAAgB,GAAnB,EAAwB,MAAMC,KAAK,CAACH,KAAK,CAACI,OAAP,CAAX;AAExB,aAAOJ,KAAP;AACD,KAb2B;;AAE1B,SAAKK,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAGD;;AAUDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,WAAL,GAAmBW,IAAnB,CAAyBC,GAAD,IAAS;AAC/B,YAAMC,QAAQ,GAAGD,GAAjB;AACA,WAAKE,QAAL,CAAc;AACZL,QAAAA,iBAAiB,EAAEI;AADP,OAAd;AAGD,KALD;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,kBAAI,KAAKP,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAhCkD;;AAoCrD,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport bodyParser from 'body-parser';\n\ninterface AppProp {\n\n}\n\ninterface AppState {\n  renderedComponent: string;\n}\n\nclass App extends React.Component<AppProp, AppState> {\n  \n  constructor(props: AppProp) {\n    super(props);\n    this.state = {\n      renderedComponent: \"\",\n    };\n  }\n\n  getResponse = async () => {\n    const resp = await fetch('/api/hello');\n    const reply = await resp.json();\n    if(resp.status !== 200) throw Error(reply.message);\n\n    return reply\n  }\n\n  componentDidMount() {\n    this.getResponse().then((res) => {\n      const someData = res;\n      this.setState({\n        renderedComponent: someData,\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <p>{this.state.renderedComponent}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}